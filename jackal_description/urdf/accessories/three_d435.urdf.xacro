<?xml version="1.0"?>


<robot name="sensor_d435"
  xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:property name="M_PI" value="3.1415926535897931" />

  <xacro:property name="front_name" value="front_camera" />

  <xacro:property name="left_name" value="left_camera" />

  <xacro:property name="right_name" value="right_camera" />

  <xacro:property name="use_mesh" value="true" />

  <xacro:property name="use_nominal_extrinsics" value="true" />

  <!-- The following values are approximate, and the camera node
     publishing TF values with actual calibrated camera extrinsic values -->
  <xacro:property name="d435_cam_depth_to_infra1_offset" value="0.0"/>
  <xacro:property name="d435_cam_depth_to_infra2_offset" value="-0.050"/>
  <xacro:property name="d435_cam_depth_to_color_offset" value="0.015"/>

  <!-- The following values model the aluminum peripherial case for the
  	D435 camera, with the camera joint represented by the actual
  	peripherial camera tripod mount -->
  <xacro:property name="d435_cam_width" value="0.090"/>
  <xacro:property name="d435_cam_height" value="0.025"/>
  <xacro:property name="d435_cam_depth" value="0.02505"/>
  <xacro:property name="d435_cam_mount_from_center_offset" value="0.0149"/>
  <!-- glass cover is 0.1 mm inwards from front aluminium plate -->
  <xacro:property name="d435_glass_to_front" value="0.1e-3"/>
  <!-- see datasheet Revision 007, Fig. 4-4 page 65 -->
  <xacro:property name="d435_zero_depth_to_glass" value="4.2e-3"/>
  <!-- convenience precomputation to avoid clutter-->
  <xacro:property name="d435_mesh_x_offset" value="${d435_cam_mount_from_center_offset-d435_glass_to_front-d435_zero_depth_to_glass}"/>

  <!-- The following offset is relative the the physical D435 camera peripherial
  	camera tripod mount -->
  <xacro:property name="d435_cam_depth_px" value="${d435_cam_mount_from_center_offset}"/>
  <xacro:property name="d435_cam_depth_py" value="0.0175"/>
  <xacro:property name="d435_cam_depth_pz" value="${d435_cam_height/2}"/>

  <material name="aluminum">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="plastic">
    <color rgba="0.1 0.1 0.1 1"/>
  </material>


  <!-- FRONT CAMERA -->
  <!-- camera body, with origin at bottom screw mount -->
  <xacro:if value="${d435 or d435_stereo}">
    <joint name="${front_name}_joint" type="fixed">
      <parent link="${front_parent}"/>
      <child link="${front_name}_bottom_screw_frame" />
      <origin xyz="${front_camera_xyz}" rpy="${front_camera_rpy}"/>
    </joint>
    <link name="${front_name}_bottom_screw_frame"/>

    <joint name="${front_name}_link_joint" type="fixed">
      <origin xyz="${d435_mesh_x_offset} ${d435_cam_depth_py} ${d435_cam_depth_pz}" rpy="0 0 0"/>
      <parent link="${front_name}_bottom_screw_frame"/>
      <child link="${front_name}_link" />
    </joint>

    <link name="${front_name}_link">
      <visual>
        <xacro:if value="${use_mesh}">
          <!-- the mesh origin is at front plate in between the two infrared camera axes -->
          <origin xyz="${d435_zero_depth_to_glass + d435_glass_to_front} ${-d435_cam_depth_py} 0" rpy="${M_PI/2} 0 ${M_PI/2}"/>
          <geometry>
            <mesh filename="file://$(find jackal_description)/meshes/d435.dae" />
          </geometry>
        </xacro:if>
        <xacro:unless value="${use_mesh}">
          <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
          <geometry>
            <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
          </geometry>
          <material name="aluminum"/>
        </xacro:unless>
      </visual>
      <collision>
        <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
        <geometry>
          <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
        </geometry>
      </collision>
      <inertial>
        <!-- The following are not reliable values, and should not be used for modeling -->
        <mass value="0.072" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" />
      </inertial>
    </link>

    <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
    <xacro:if value="${use_nominal_extrinsics}">
      <!-- camera depth joints and links -->
      <joint name="${front_name}_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="${front_name}_link"/>
        <child link="${front_name}_depth_frame" />
      </joint>
      <link name="${front_name}_depth_frame"/>

      <joint name="${front_name}_depth_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${front_name}_depth_frame" />
        <child link="${front_name}_depth_optical_frame" />
      </joint>
      <link name="${front_name}_depth_optical_frame"/>

      <!-- camera left IR joints and links -->
      <joint name="${front_name}_infra1_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra1_offset} 0" rpy="0 0 0" />
        <parent link="${front_name}_link" />
        <child link="${front_name}_infra1_frame" />
      </joint>
      <link name="${front_name}_infra1_frame"/>

      <joint name="${front_name}_infra1_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${front_name}_infra1_frame" />
        <child link="${front_name}_infra1_optical_frame" />
      </joint>
      <link name="${front_name}_infra1_optical_frame"/>

      <!-- camera right IR joints and links -->
      <joint name="${front_name}_infra2_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra2_offset} 0" rpy="0 0 0" />
        <parent link="${front_name}_link" />
        <child link="${front_name}_infra2_frame" />
      </joint>
      <link name="${front_name}_infra2_frame"/>

      <joint name="${front_name}_infra2_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${front_name}_infra2_frame" />
        <child link="${front_name}_infra2_optical_frame" />
      </joint>
      <link name="${front_name}_infra2_optical_frame"/>

      <!-- camera color joints and links -->
      <joint name="${front_name}_color_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_color_offset} 0" rpy="0 0 0" />
        <parent link="${front_name}_link" />
        <child link="${front_name}_color_frame" />
      </joint>
      <link name="${front_name}_color_frame"/>

      <joint name="${front_name}_color_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${front_name}_color_frame" />
        <child link="${front_name}_color_optical_frame" />
      </joint>
      <link name="${front_name}_color_optical_frame"/>
    </xacro:if>
  </xacro:if>

  <xacro:if value="$(arg gazebo_sim)">
    <!-- CAMERA PLUGIN GAZEBO -->
    <xacro:if value="$(optenv JACKAL_D435 0)">
      <gazebo reference="${front_camera_frame_id}">
        <sensor type="depth" name="d435">
          <always_on>1</always_on>
          <update_rate>30</update_rate>

          <camera name="camera">
            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
          </camera>
          <plugin name="front_camera_plugin" filename="libgazebo_ros_camera.so">
            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <camera_name>front_camera</camera_name>

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>front_camera_color_optical_frame</frame_name>

          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
    <!-- MULTICAMERA PLUGIN GAZEBO -->
    <xacro:if value="$(optenv JACKAL_D435_STEREO 0)">
      <!-- Both cameras in the pair are anchored off the left camera frame. -->
      <gazebo reference="${front_stereo_camera_frame_id}">
        <sensor type="multicamera" name="d435_stereo">
          <always_on>1</always_on>
          <update_rate>30</update_rate>

          <camera name="left">

            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.0001</stddev>
          </noise>
          </camera>

          <camera name="right">
          <pose>0 -0.07 0 0 0 0</pose>
            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.0001</stddev>
          </noise>
          </camera>

          <plugin name="front_stereo_camera_plugin" filename="libgazebo_ros_camera.so" >
            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <camera_name>front_camera_stereo</camera_name>

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>front_camera_infra1_optical_frame</frame_name>
            <hack_baseline>0.05</hack_baseline>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
  </xacro:if>


  <!-- LEFT CAMERA -->
  <!-- camera body, with origin at bottom screw mount -->
  <xacro:if value="${side_d435 or side_d435_stereo}">
    <joint name="${left_name}_joint" type="fixed">
      <parent link="${left_parent}"/>
      <child link="${left_name}_bottom_screw_frame" />
      <origin xyz="${left_camera_xyz}" rpy="${left_camera_rpy}"/>
    </joint>
    <link name="${left_name}_bottom_screw_frame"/>

    <joint name="${left_name}_link_joint" type="fixed">
      <origin xyz="${d435_mesh_x_offset} ${d435_cam_depth_py} ${d435_cam_depth_pz}" rpy="0 0 0"/>
      <parent link="${left_name}_bottom_screw_frame"/>
      <child link="${left_name}_link" />
    </joint>

    <link name="${left_name}_link">
      <visual>
        <xacro:if value="${use_mesh}">
          <!-- the mesh origin is at front plate in between the two infrared camera axes -->
          <origin xyz="${d435_zero_depth_to_glass + d435_glass_to_front} ${-d435_cam_depth_py} 0" rpy="${M_PI/2} 0 ${M_PI/2}"/>
          <geometry>
            <mesh filename="file://$(find jackal_description)/meshes/d435.dae" />
          </geometry>
        </xacro:if>
        <xacro:unless value="${use_mesh}">
          <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
          <geometry>
            <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
          </geometry>
          <material name="aluminum"/>
        </xacro:unless>
      </visual>
      <collision>
        <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
        <geometry>
          <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
        </geometry>
      </collision>
      <inertial>
        <!-- The following are not reliable values, and should not be used for modeling -->
        <mass value="0.072" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" />
      </inertial>
    </link>

    <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
    <xacro:if value="${use_nominal_extrinsics}">
      <!-- camera depth joints and links -->
      <joint name="${left_name}_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="${left_name}_link"/>
        <child link="${left_name}_depth_frame" />
      </joint>
      <link name="${left_name}_depth_frame"/>

      <joint name="${left_name}_depth_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${left_name}_depth_frame" />
        <child link="${left_name}_depth_optical_frame" />
      </joint>
      <link name="${left_name}_depth_optical_frame"/>

      <!-- camera left IR joints and links -->
      <joint name="${left_name}_infra1_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra1_offset} 0" rpy="0 0 0" />
        <parent link="${left_name}_link" />
        <child link="${left_name}_infra1_frame" />
      </joint>
      <link name="${left_name}_infra1_frame"/>

      <joint name="${left_name}_infra1_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${left_name}_infra1_frame" />
        <child link="${left_name}_infra1_optical_frame" />
      </joint>
      <link name="${left_name}_infra1_optical_frame"/>

      <!-- camera right IR joints and links -->
      <joint name="${left_name}_infra2_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra2_offset} 0" rpy="0 0 0" />
        <parent link="${left_name}_link" />
        <child link="${left_name}_infra2_frame" />
      </joint>
      <link name="${left_name}_infra2_frame"/>

      <joint name="${left_name}_infra2_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${left_name}_infra2_frame" />
        <child link="${left_name}_infra2_optical_frame" />
      </joint>
      <link name="${left_name}_infra2_optical_frame"/>

      <!-- camera color joints and links -->
      <joint name="${left_name}_color_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_color_offset} 0" rpy="0 0 0" />
        <parent link="${left_name}_link" />
        <child link="${left_name}_color_frame" />
      </joint>
      <link name="${left_name}_color_frame"/>

      <joint name="${left_name}_color_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${left_name}_color_frame" />
        <child link="${left_name}_color_optical_frame" />
      </joint>
      <link name="${left_name}_color_optical_frame"/>
    </xacro:if>
  </xacro:if>

  <xacro:if value="$(arg gazebo_sim)">
    <!-- CAMERA PLUGIN GAZEBO -->
    <xacro:if value="$(optenv JACKAL_SIDE_D435 0)">
      <gazebo reference="${left_camera_frame_id}">
        <sensor type="depth" name="d435">
          <always_on>1</always_on>
          <update_rate>30</update_rate>

          <camera name="camera">
            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
          </camera>
          <plugin name="left_camera_plugin" filename="libgazebo_ros_camera.so">
            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <camera_name>left_camera</camera_name>

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>left_camera_color_optical_frame</frame_name>

          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
    <!-- MULTICAMERA PLUGIN GAZEBO -->
    <xacro:if value="$(optenv JACKAL_SIDE_D435_STEREO 0)">
      <!-- Both cameras in the pair are anchored off the left camera frame. -->
      <gazebo reference="${left_stereo_camera_frame_id}">
        <sensor type="multicamera" name="d435_stereo">
          <always_on>1</always_on>
          <update_rate>30</update_rate>

          <camera name="left">

            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.0001</stddev>
          </noise>
          </camera>

          <camera name="right">
          <pose>0 -0.07 0 0 0 0</pose>
            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.0001</stddev>
          </noise>
          </camera>

          <plugin name="left_stereo_camera_plugin"  filename="libgazebo_ros_camera.so">
            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <camera_name>left_camera_stereo</camera_name>

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>left_camera_infra1_optical_frame</frame_name>
            <hack_baseline>0.05</hack_baseline>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
  </xacro:if>

  <!-- RIGHT CAMERA -->
  <!-- camera body, with origin at bottom screw mount -->
  <xacro:if value="${side_d435 or side_d435_stereo}">
    <joint name="${right_name}_joint" type="fixed">
      <parent link="${right_parent}"/>
      <child link="${right_name}_bottom_screw_frame" />
      <origin xyz="${right_camera_xyz}" rpy="${right_camera_rpy}"/>
    </joint>
    <link name="${right_name}_bottom_screw_frame"/>

    <joint name="${right_name}_link_joint" type="fixed">
      <origin xyz="${d435_mesh_x_offset} ${d435_cam_depth_py} ${d435_cam_depth_pz}" rpy="0 0 0"/>
      <parent link="${right_name}_bottom_screw_frame"/>
      <child link="${right_name}_link" />
    </joint>

    <link name="${right_name}_link">
      <visual>
        <xacro:if value="${use_mesh}">
          <!-- the mesh origin is at front plate in between the two infrared camera axes -->
          <origin xyz="${d435_zero_depth_to_glass + d435_glass_to_front} ${-d435_cam_depth_py} 0" rpy="${M_PI/2} 0 ${M_PI/2}"/>
          <geometry>
            <mesh filename="file://$(find jackal_description)/meshes/d435.dae" />
          </geometry>
        </xacro:if>
        <xacro:unless value="${use_mesh}">
          <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
          <geometry>
            <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
          </geometry>
          <material name="aluminum"/>
        </xacro:unless>
      </visual>
      <collision>
        <origin xyz="0 ${-d435_cam_depth_py} 0" rpy="0 0 0"/>
        <geometry>
          <box size="${d435_cam_depth} ${d435_cam_width} ${d435_cam_height}"/>
        </geometry>
      </collision>
      <inertial>
        <!-- The following are not reliable values, and should not be used for modeling -->
        <mass value="0.072" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.003881243" ixy="0.0" ixz="0.0" iyy="0.000498940" iyz="0.0" izz="0.003879257" />
      </inertial>
    </link>

    <!-- Use the nominal extrinsics between camera frames if the calibrated extrinsics aren't being published. e.g. running the device in simulation  -->
    <xacro:if value="${use_nominal_extrinsics}">
      <!-- camera depth joints and links -->
      <joint name="${right_name}_depth_joint" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="${right_name}_link"/>
        <child link="${right_name}_depth_frame" />
      </joint>
      <link name="${right_name}_depth_frame"/>

      <joint name="${right_name}_depth_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${right_name}_depth_frame" />
        <child link="${right_name}_depth_optical_frame" />
      </joint>
      <link name="${right_name}_depth_optical_frame"/>

      <!-- camera left IR joints and links -->
      <joint name="${right_name}_infra1_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra1_offset} 0" rpy="0 0 0" />
        <parent link="${right_name}_link" />
        <child link="${right_name}_infra1_frame" />
      </joint>
      <link name="${right_name}_infra1_frame"/>

      <joint name="${right_name}_infra1_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${right_name}_infra1_frame" />
        <child link="${right_name}_infra1_optical_frame" />
      </joint>
      <link name="${right_name}_infra1_optical_frame"/>

      <!-- camera right IR joints and links -->
      <joint name="${right_name}_infra2_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_infra2_offset} 0" rpy="0 0 0" />
        <parent link="${right_name}_link" />
        <child link="${right_name}_infra2_frame" />
      </joint>
      <link name="${right_name}_infra2_frame"/>

      <joint name="${right_name}_infra2_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${right_name}_infra2_frame" />
        <child link="${right_name}_infra2_optical_frame" />
      </joint>
      <link name="${right_name}_infra2_optical_frame"/>

      <!-- camera color joints and links -->
      <joint name="${right_name}_color_joint" type="fixed">
        <origin xyz="0 ${d435_cam_depth_to_color_offset} 0" rpy="0 0 0" />
        <parent link="${right_name}_link" />
        <child link="${right_name}_color_frame" />
      </joint>
      <link name="${right_name}_color_frame"/>

      <joint name="${right_name}_color_optical_joint" type="fixed">
        <origin xyz="0 0 0" rpy="${-M_PI/2} 0 ${-M_PI/2}" />
        <parent link="${right_name}_color_frame" />
        <child link="${right_name}_color_optical_frame" />
      </joint>
      <link name="${right_name}_color_optical_frame"/>
    </xacro:if>
  </xacro:if>

  <xacro:if value="$(arg gazebo_sim)">
    <!-- CAMERA PLUGIN GAZEBO -->
    <xacro:if value="$(optenv JACKAL_SIDE_D435 0)">
      <gazebo reference="${right_camera_frame_id}">
        <sensor type="depth" name="d435">
          <always_on>1</always_on>
          <update_rate>30</update_rate>

          <camera name="camera">
            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
          </camera>
          <plugin name="right_camera_plugin" filename="libgazebo_ros_camera.so">
            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <camera_name>right_camera</camera_name>

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>right_camera_color_optical_frame</frame_name>

          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
    <!-- MULTICAMERA PLUGIN GAZEBO -->
    <xacro:if value="$(optenv JACKAL_SIDE_D435_STEREO 0)">
      <!-- Both cameras in the pair are anchored off the left camera frame. -->
      <gazebo reference="${right_stereo_camera_frame_id}">
        <sensor type="multicamera" name="d435_stereo">
          <always_on>1</always_on>
          <update_rate>30</update_rate>

          <camera name="left">

            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.0001</stddev>
          </noise>
          </camera>

          <camera name="right">
          <pose>0 -0.07 0 0 0 0</pose>
            <horizontal_fov>${60*3.14/180.0}</horizontal_fov>
            <image>
              <format>R8G8B8</format>
              <width>640</width>
              <height>480</height>
            </image>
            <clip>
              <near>0.15</near>
              <far>50.0</far>
            </clip>
            <noise>
              <type>gaussian</type>
              <!-- Noise is sampled independently per pixel on each frame.
                  That pixel's noise value is added to each of its color
                  channels, which at that point lie in the range [0,1]. -->
              <mean>0.0</mean>
              <stddev>0.0001</stddev>
          </noise>
          </camera>

          <plugin name="right_stereo_camera_plugin"  filename="libgazebo_ros_camera.so">
            <!-- Set camera name. If empty, defaults to sensor name (i.e. "sensor_name") -->
            <camera_name>right_camera_stereo</camera_name>

            <!-- Set TF frame name. If empty, defaults to link name (i.e. "link_name") -->
            <frame_name>right_camera_infra1_optical_frame</frame_name>
            <hack_baseline>0.05</hack_baseline>
          </plugin>
        </sensor>
      </gazebo>
    </xacro:if>
  </xacro:if>

  
</robot>
